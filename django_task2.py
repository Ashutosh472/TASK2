# -*- coding: utf-8 -*-
"""DJANGO TASK2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J_nSaPtTJJfU4hqdhz-gS7B4Gf1h92er
"""

# WAP to input number of seconds and print it in form HH:MM:SS. Like for 4000 seconds it will be 01:06:40.
def convert(seconds):
    seconds = seconds % (24 * 3600)
    hour = seconds // 3600
    seconds %= 3600
    minutes = seconds // 60
    seconds %= 60
      
    return "%d:%02d:%02d" % (hour, minutes, seconds)
      
# Driver program
n = 4000
print(convert(n))

# Mr. jone has two walls of different dimensions such that their dimensions are to be given input in feet
# and inches (width and height both). He visited painter to color both sticks such that cost of color is 120/- per
# square meter. Find total cost of painting both walls. Bill should contain details of painting cost of each along
# with total cost

def countWays(n, k) :
 
    
    total = k
    mod = 1000000007
 
  
    same, diff = 0, k
 
   
    for i in range(2, n + 1) :
         
        
        same = diff
 
        
        diff = total * (k - 1)
        diff = diff % mod
 
       
        total = (same + diff) % mod
     
    return total
 
if __name__ == "__main__" :
 
    n, k = 3, 2
    print(countWays(n, k))

# Write a program to calculate BMI of a person after inputting the weight in kgs and height in meters and then print the nutritional status as per the given table
def BMI(height, weight):
    bmi = weight/(height**2)
    return bmi
 
# Driver code
height = 1.79832
weight = 70
 
# calling the BMI function
bmi = BMI(height, weight)
print("The BMI is", format(bmi), "so ", end='')
 
# Conditions to find out BMI category
if (bmi < 18.5):
    print("underweight")
 
elif ( bmi >= 18.5 and bmi < 24.9):
    print("Healthy")
 
elif ( bmi >= 24.9 and bmi < 30):
    print("overweight")
 
elif ( bmi >=30):
    print("Suffering from Obesity")

# Write a program to check if the given number is Armstrong or not?
num = int(input("Enter a number: "))

# initialize sum
sum = 0

# find the sum of the cube of each digit
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10

# display the result
if num == sum:
   print(num,"is an Armstrong number")
else:
   print(num,"is not an Armstrong number")

maximum = int(input(" Please Enter any Maximum Value : "))
print(2)
for number in range(2, maximum + 1):
   
    if(number % 2 != 0):
        print("{0}".format(number))